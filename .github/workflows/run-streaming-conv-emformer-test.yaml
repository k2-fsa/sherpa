# Copyright      2022  Xiaomi Corp.       (author: Fangjun Kuang,
#                                                  Zengwei Yao)
# See ../../LICENSE for clarification regarding multiple authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Run streaming ConvEmformer ASR tests

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/run-streaming-conv-emformer-test.yaml'
      - 'CMakeLists.txt'
      - 'cmake/**'
      - 'sherpa/csrc/**'
      - 'sherpa/bin/conv_emformer_transducer_stateless2/**'
      - 'sherpa/python/**'
  pull_request:
    types: [labeled]
    paths:
      - '.github/workflows/run-streaming-conv-emformer-test.yaml'
      - 'CMakeLists.txt'
      - 'cmake/**'
      - 'sherpa/csrc/**'
      - 'sherpa/bin/conv_emformer_transducer_stateless2/**'
      - 'sherpa/python/**'

concurrency:
  group: run_streaming_conv_emformer_asr_tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run_streaming_conv_emformer_asr_tests:
    if: github.event.label.name == 'ready' || github.event.label.name == 'conv-emformer' || github.event_name == 'push'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build_type: ["Release"]
        os: [ubuntu-latest]
        torch: ["1.13.0"]
        torchaudio: ["0.13.0"]
        python-version: ["3.8"]
        language: ["English", "English_and_Chinese"]
        decoding: ["greedy_search", "fast_beam_search", "fast_beam_search_nbest", "fast_beam_search_nbest_LG", "modified_beam_search"]
        exclude:
          - language: "English_and_Chinese"
            decoding: "fast_beam_search"
          - language: "English_and_Chinese"
            decoding: "fast_beam_search_nbest"
          - language: "English_and_Chinese"
            decoding: "fast_beam_search_nbest_LG"


    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.1
        with:
          key: ${{ matrix.os }}-${{ matrix.torch }}-${{ matrix.python-version }}-${{ matrix.build_type }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display gcc version
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          gcc --version

      - name: Install PyTorch ${{ matrix.torch }}
        shell: bash
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install wheel twine typing_extensions websockets sentencepiece>=0.1.96
          python3 -m pip install torch==${{ matrix.torch }} torchaudio=${{ matrix.torchaudio }} numpy -f https://download.pytorch.org/whl/cpu/torch_stable.html

          python3 -m pip install k2==1.23.3.dev20230127+cpu.torch${{ matrix.torch }} -f https://k2-fsa.org/nightly/index.html

          python3 -m torch.utils.collect_env


      - name: Cache kaldifeat
        id: my-cache-2
        uses: actions/cache@v2
        with:
          path: |
            ~/tmp/kaldifeat
          key: cache-tmp-${{ matrix.python-version }}-${{ matrix.os }}-${{ matrix.torch }}

      - name: Install kaldifeat
        if: steps.my-cache-2.outputs.cache-hit != 'true'
        shell: bash
        run: |
          .github/scripts/install-kaldifeat.sh

      - name: Install sherpa
        shell: bash
        run: |
          export KALDIFEAT_INSTALL_PREFIX=$HOME/tmp/kaldifeat/build
          echo $KALDIFEAT_INSTALL_PREFIX
          ls -lh $KALDIFEAT_INSTALL_PREFIX

          export SHERPA_CMAKE_ARGS="-DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSHERPA_ENABLE_TESTS=ON"

          python3 setup.py install

      - name: Download pretrained model and test-data
        if: matrix.language == 'English'
        shell: bash
        run: |
          git lfs install
          git clone https://huggingface.co/Zengwei/icefall-asr-librispeech-conv-emformer-transducer-stateless2-2022-07-05

      - name: Start server
        if: matrix.language == 'English'
        shell: bash
        run: |
          export PYTHONPATH=~/tmp/kaldifeat/kaldifeat/python:$PYTHONPATH
          export PYTHONPATH=~/tmp/kaldifeat/build/lib:$PYTHONPATH

          ./sherpa/bin/conv_emformer_transducer_stateless2/streaming_server.py \
            --port 6006 \
            --max-batch-size 50 \
            --max-wait-ms 5 \
            --nn-pool-size 1 \
            --nn-model-filename ./icefall-asr-librispeech-conv-emformer-transducer-stateless2-2022-07-05/exp/cpu-jit-epoch-30-avg-10-torch-1.10.0.pt \
            --decoding-method ${{ matrix.decoding }} \
            --lang-dir ./icefall-asr-librispeech-conv-emformer-transducer-stateless2-2022-07-05/data/lang_bpe_500/ \
            --bpe-model-filename ./icefall-asr-librispeech-conv-emformer-transducer-stateless2-2022-07-05/data/lang_bpe_500/bpe.model &

          echo "Sleep 10 seconds to wait for the server startup"
          sleep 10

      - name: Start client
        if: matrix.language == 'English'
        shell: bash
        run: |
          ./sherpa/bin/conv_emformer_transducer_stateless2/streaming_client.py \
            --server-addr localhost \
            --server-port 6006 \
            ./icefall-asr-librispeech-conv-emformer-transducer-stateless2-2022-07-05/test_wavs/1089-134686-0001.wav \
            ./icefall-asr-librispeech-conv-emformer-transducer-stateless2-2022-07-05/test_wavs/1221-135766-0001.wav \
            ./icefall-asr-librispeech-conv-emformer-transducer-stateless2-2022-07-05/test_wavs/1221-135766-0002.wav

      - name: Download pretrained model and test-data
        if: matrix.language == 'English_and_Chinese'
        shell: bash
        run: |
          git lfs install
          git clone https://huggingface.co/ptrnull/icefall-asr-conv-emformer-transducer-stateless2-zh
          cd icefall-asr-conv-emformer-transducer-stateless2-zh
          mkdir test_wavs
          cd test_wavs
          wget https://huggingface.co/spaces/k2-fsa/automatic-speech-recognition/resolve/main/test_wavs/tal_csasr/0.wav
          wget https://huggingface.co/spaces/k2-fsa/automatic-speech-recognition/resolve/main/test_wavs/tal_csasr/210_36476_210_8341_1_1533271973_7057520_132.wav
          wget https://huggingface.co/spaces/k2-fsa/automatic-speech-recognition/resolve/main/test_wavs/tal_csasr/210_36476_210_8341_1_1533271973_7057520_138.wav
          wget https://huggingface.co/spaces/k2-fsa/automatic-speech-recognition/resolve/main/test_wavs/tal_csasr/210_36476_210_8341_1_1533271973_7057520_145.wav

      - name: Start server
        if: matrix.language == 'English_and_Chinese'
        shell: bash
        run: |
          export PYTHONPATH=~/tmp/kaldifeat/kaldifeat/python:$PYTHONPATH
          export PYTHONPATH=~/tmp/kaldifeat/build/lib:$PYTHONPATH

          ./sherpa/bin/conv_emformer_transducer_stateless2/streaming_server.py \
            --port 6006 \
            --max-batch-size 50 \
            --max-wait-ms 5 \
            --nn-pool-size 1 \
            --nn-model-filename icefall-asr-conv-emformer-transducer-stateless2-zh/exp/cpu_jit-epoch-11-avg-1.pt  \
            --decoding-method ${{ matrix.decoding }} \
            --token-filename icefall-asr-conv-emformer-transducer-stateless2-zh/data/lang_char_bpe/tokens.txt &

          echo "Sleep 10 seconds to wait for the server startup"
          sleep 10

      - name: Start client
        if: matrix.language == 'English_and_Chinese'
        shell: bash
        run: |
          ./sherpa/bin/conv_emformer_transducer_stateless2/streaming_client.py \
            --server-addr localhost \
            --server-port 6006 \
            ./icefall-asr-conv-emformer-transducer-stateless2-zh/test_wavs/0.wav \
            ./icefall-asr-conv-emformer-transducer-stateless2-zh/test_wavs/210_36476_210_8341_1_1533271973_7057520_132.wav \
            ./icefall-asr-conv-emformer-transducer-stateless2-zh/test_wavs/210_36476_210_8341_1_1533271973_7057520_138.wav \
            ./icefall-asr-conv-emformer-transducer-stateless2-zh/test_wavs/210_36476_210_8341_1_1533271973_7057520_145.wav
