package:
  name: sherpa
  version: "1.3"

source:
  path: "{{ environ.get('SHERPA_ROOT_DIR') }}"

build:
  number: 0
  string: cpu_py{{ environ.get('SHERPA_PYTHON_VERSION') }}_torch{{ environ.get('SHERPA_TORCH_VERSION') }}
  script: |
    export LIBRARY_PATH=$PREFIX/lib:$LIBRARY_PATH # [not win]

    ls -lh $PREFIX/lib/libmkl* # [not win]
    cp -v $PREFIX/lib/libmkl_intel_ilp64.dylib $PREFIX/lib/libmkl_intel_ilp64.2.dylib # [osx]
    cp -v $PREFIX/lib/libmkl_core.dylib $PREFIX/lib/libmkl_core.2.dylib # [osx]
    cp -v $PREFIX/lib/libmkl_intel_thread.dylib $PREFIX/lib/libmkl_intel_thread.2.dylib # [osx]
    ls -lh $PREFIX/lib/libmkl* # [not win]

    {{ PYTHON }} setup.py install --single-version-externally-managed --record=record.txt

    cp build/lib.linux-x86_64-*/sherpa/bin/sherpa $PREFIX/bin   # [linux]
    cp build/lib.linux-x86_64-*/sherpa/bin/sherpa-version $PREFIX/bin   # [linux]

    cp build/lib.macosx-*-x86_64-*/sherpa/bin/sherpa $PREFIX/bin # [osx]
    cp build/lib.macosx-*-x86_64-*/sherpa/bin/sherpa-version $PREFIX/bin # [osx]

    chmod +x $PREFIX/bin/sherpa  # [not win]
    chmod +x $PREFIX/bin/sherpa-version  # [not win]

  features:
    - cpuonly # [not osx]

requirements:
  build:
    - {{ compiler('c') }} # [win]
    - {{ compiler('cxx') }} # [win]

  host:
    - anaconda-client
    - cmake=3.18
    - python
    - pytorch={{ environ.get('SHERPA_TORCH_VERSION') }}
    - kaldifeat
    - k2
    - cpuonly
    - gcc_linux-64=7 # [linux]

  run:
    - python
    - pytorch={{ environ.get('SHERPA_TORCH_VERSION') }}
    - kaldifeat
    - k2

about:
  home: https://github.com/k2-fsa/sherpa
  license: Apache V2
  license_file: LICENSE
  summary: Streaming and non-streaming ASR server for next-gen Kaldi
  description: |
    An ASR server framework supporting both streaming and non-streaming
    recognition using next-gen Kaldi.
